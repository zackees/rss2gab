"""
    Tests parsing an rss feed.
"""
import unittest
from datetime import datetime, timedelta

from rss2gab.parse_rss_feed import parse_rss_feed

# from rss2gab import gab_driver

RSS_FEED = "http://Bigleaguepolitics.com/feed"

USER = "testgabposter"
PASS = "Yq4F2H9Lvp"

POST_IMAGE = False


class RssTester(unittest.TestCase):
    """Gab driver test framework."""

    def test_dryrun_posting(self) -> None:
        """Tests that gab_post works, but doesn't not post."""
        now = datetime.now()
        max_age = timedelta(days=5)
        published_after = now - max_age
        rss_entries = parse_rss_feed(RSS_FEED, published_after=published_after)
        self.assertTrue(len(rss_entries) > 0)
        for entry in rss_entries:
            age = now - entry.published
            self.assertLessEqual(age, max_age)

    def test_author_rss(self) -> None:
        """Tests that creator rss works."""
        rss_entries = parse_rss_feed(
            """
<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title><![CDATA[Trending Videos]]></title>
    <description><![CDATA[Trending Videos]]></description>
    <link>https://www.blast.video</link>
    <atom:link href="https://www.blast.video/assets/json/trending.rss" rel="self" type="application/rss+xml"/>
    <generator>Generated by genrss for python</generator>
    <lastBuildDate>Wed, 01 Jun 2022 19:54:04 GMT</lastBuildDate>
    <item>
      <title><![CDATA[EXCLUSIVE: Trump's lawyer reveals how they'll win the next Clinton case | Wake Up America]]></title>
      <description><![CDATA[]]></description>
      <link>https://www.youtube.com/watch?v=LksAK_x3QhQ</link>
      <guid isPermaLink="true">https://www.youtube.com/watch?v=LksAK_x3QhQ</guid>
      <dc:creator><![CDATA[NewsmaxTV]]></dc:creator>
      <category><![CDATA[trending]]></category>
      <pubDate>2022-06-01T15:22:57+00:00</pubDate>
    </item>
  </channel>
</rss>
"""
        )
        self.assertTrue(len(rss_entries) == 1)
        entry = rss_entries[0]
        self.assertEqual(entry.author, "NewsmaxTV")


if __name__ == "__main__":
    unittest.main()
